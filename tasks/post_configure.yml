---
# Global Policies, mounts, backends

- name: create local config stores
  file:
    path: "{{vault_root}}/etc/vault{{ item }}"
    state: directory
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
    mode: 0700
  with_items:
  - /sys/policy
  - /sys/auth
  - /sys/mounts
#################################
- name: invoke policy api
  uri:
    url: "{{ VAULT_ADDR }}/v1/sys/policy/{{ item.key }}"
    body: "{{ lookup('template', 'namedpolicy', convert_data=false) }}"
    body_format: json
    method: POST
    status_code: 204
    headers:
      X-Vault-Token: "{{ VAULT_TOKEN }}"
  vars:
    policydoc: " {{ item.value | to_json }}"
  with_dict: "{{ vault_policies  }}"
  register: vault_policy_config
  
- name: create local policy config store
  file: 
    path: "{{ filepath | dirname }}"
    state: directory
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
    mode: 0700
  vars:
    filepath: "{{vault_root}}/etc/vault/sys/policy/{{ item.key }}.json"
  with_dict: "{{ vault_policies }}"  
      
- name: store policies locally
  template:
    src: namedpolicy
    dest: "{{vault_root}}/etc/vault/sys/policy/{{ item.key }}.json"
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
  vars:
    policydoc: "{{ item.value | to_json }}"
  with_dict: "{{ vault_policies }}"


###################################
- name: ensure auth backends
  uri:
    url: "{{ VAULT_ADDR }}/v1/sys/auth/{{ item.key }}"
    body: "{{ lookup('template', 'authconfig', convert_data=False) }}"
    body_format: json
    method: PUT
    status_code: 204
    headers:
      X-Vault-Token: "{{ VAULT_TOKEN }}"
  vars:
    auth: "{{ item.value | to_json }}"
  failed_when: ( vault_auth_config.status != 204 ) and
               ('path is already in use' not in vault_auth_config.content )
  with_dict: "{{ vault_auth_backends  }}"
  register: vault_auth_config

- name: create local auth config store
  file: 
    path: "{{ filepath | dirname }}"
    state: directory
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
    mode: 0700
  vars:
    filepath: "{{vault_root}}/etc/vault/sys/auth/{{ item.key }}.json"
  with_dict: "{{ vault_auth_backends }}"  

- name: store auth config locally
  template:
    src: authconfig
    dest: "{{vault_root}}/etc/vault/sys/auth/{{ item.key }}.json"
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
  vars:
    auth: "{{ item.value | to_json }}"
  with_dict: "{{ vault_auth_backends }}"


####################################
- name: ensure secret backends
  uri:
    url: "{{ VAULT_ADDR }}/v1/sys/mounts/{{ item.key }}"
    body: "{{ lookup('template', 'secretconfig', convert_data=False) }}"
    body_format: json
    method: PUT
    status_code: 204
    headers:
      X-Vault-Token: "{{ VAULT_TOKEN }}"
  vars:
    backend: "{{ item.value | to_json }}"
  failed_when: ( vault_secret_config.status != 204 ) and
               ('existing mount at' not in vault_secret_config.content )
  with_dict: "{{ vault_secret_backends  }}"
  register: vault_secret_config

- name: create local secret backend config store
  file: 
    path: "{{ filepath | dirname }}"
    state: directory
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
    mode: 0700
  vars:
    filepath: "{{vault_root}}/etc/vault/sys/mounts/{{ item.key }}.json"
  with_dict: "{{ vault_secret_backends }}"  


- name: store secrets config locally
  template:
    src: secretconfig
    dest: "{{vault_root}}/etc/vault/sys/mounts/{{ item.key }}.json"
    owner: "{{vault_user}}"
    group: "{{vault_group}}"
  vars:
    backend: "{{ item.value | to_json }}"
  with_dict: "{{ vault_secret_backends }}"


########### Do NOT STORE ############
- name: custom rest config
  uri:
    url: "{{ VAULT_ADDR }}/v1/{{ item.key }}"
    body: " {{ requestbody }}"
    body_format: json
    method: POST
    status_code: 204
    headers:
      X-Vault-Token: "{{ VAULT_TOKEN }}"
  vars:
    requestbody: "{{ item.value | to_json }}"
#  failed_when: ( vault_secret_config.status != 204 ) and
#               ('existing mount at' not in vault_secret_config.content )
  with_dict: "{{ vault_custom_rest_config  }}"
  no_log: True
  register: vault_rest_config
